name: 'Diploi Builder Action'
description: 'An action that builds components from a Diploi stack'
branding:
  icon: 'package'
  color: 'purple'

inputs:
  identifier:
    description: 'The identifier for the component'
    required: true
  folder:
    description: 'The folder for the component'
    required: true
  name:
    description: 'Optional name for the build'
  type:
    description: 'The type of this build'
  project:
    description: 'Project name for the Diploi Docker registry'
    required: true
  registry:
    description: 'Hostname for the Diploi Docker registry'
    required: true
  username:
    description: 'User for the Diploi Docker registry'
    required: true
  password:
    description: 'Password for the Diploi Docker registry'
    required: true

runs:
  using: composite
  steps:
    - name: 'Set up QEMU'
      uses: docker/setup-qemu-action@v3

    - name: 'Set up Docker Buildx'
      uses: docker/setup-buildx-action@v3

    - name: 'Docker Meta'
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.registry }}/${{ env.project }}/${{ inputs.identifier }}
        tags: |
          type=ref,event=branch,enable=${{ inputs.type == 'main-dev' || inputs.type == 'main' }}
          type=ref,event=branch,suffix=-dev.,enable=${{ inputs.type == 'main-dev' || inputs.type == 'dev' }}

    - name: 'Log in to the Diploi Container Registry'
      uses: docker/login-action@v2
      with:
        registry: ${{ env.registry }}
        username: ${{ env.username }}
        password: ${{ env.password }}

    - name: 'Build And Push'
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ${{ inputs.folder }}/${{ inputs.type == 'dev' && 'Dockerfile.dev' || 'Dockerfile' }}
        pull: true
        push: ${{ github.event_name != 'pull_request' }}
        platforms: linux/arm64
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          FOLDER=/app/${{ inputs.folder }}
